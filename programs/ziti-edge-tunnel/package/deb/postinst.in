ln -sf @CPACK_BIN_DIR@/@CPACK_PACKAGE_NAME@ /usr/bin/@CPACK_PACKAGE_NAME@
ln -sf @CPACK_SHARE_DIR@/@SYSTEMD_UNIT_FILE_NAME@ @SYSTEMD_UNIT_DIR@/@SYSTEMD_UNIT_FILE_NAME@

# Source debconf library.
. /usr/share/debconf/confmodule

# Add user `ziti'
if [ "$1" = "configure" ]; then
  # create user / group
  # systemd-sysusers isn't on xenial, possibly others? test and fall back to useradd as a last ditch
  # systemd-sysusers on ubuntu 18 (systemd v237) doesn't recognize `--replace`
  if command -v systemd-sysusers > /dev/null 2>&1 &&
     test $(systemd-sysusers --version | awk '/^systemd / { print $2}') -gt 237; then
    echo 'u ziti - "openziti user" "/var/lib/ziti"' | \
      systemd-sysusers --replace=/usr/lib/sysusers.d/ziti-edge-tunnel.conf -
  else
    if ! getent group ziti > /dev/null 2>&1; then
      groupadd --system ziti
    fi
    if ! getent passwd ziti > /dev/null 2>&1; then
      useradd --system --home-dir=/var/lib/ziti --shell /usr/sbin/nologin --comment "openziti user" -g ziti --no-user-group ziti
    fi
  fi

  # update permissions
  chown -R ziti:ziti "@ZITI_STATE_DIR@"
  chmod -R u=rwX,g=rwX,o= "@ZITI_STATE_DIR@"

  chown root:ziti "@ZITI_IDENTITY_DIR@"
  chmod 0770 "@ZITI_IDENTITY_DIR@"
  find "@ZITI_IDENTITY_DIR@" -maxdepth 1 -name "*.json" -type f -exec chown ziti:ziti "{}" + -exec chmod 0400 "{}" +

  policykit_version=$(dpkg-query -Wf '${Version;5}' policykit-1 | cut -d . -f 2)
  systemd_version=$(dpkg-query -Wf '${Version;3}' systemd)

  # install PolicyKit policy if using policykit < 0.106 (https://askubuntu.com/questions/1287924/whats-going-on-with-policykit)
  if [ ${policykit_version} -lt 106 ]; then
    # ... the set-llmnr action was exposed with v243 (https://github.com/systemd/systemd/commit/52aaef0f5dc81b9a08d720f551eac53ac88aa596)
    if [ ${systemd_version} -ge 243 ]; then
      cp "@CPACK_SHARE_DIR@/@ZITI_POLKIT_PKLA_FILE@.sample" "/var/lib/polkit-1/localauthority/10-vendor.d/@ZITI_POLKIT_PKLA_FILE@"
      db_set ziti_edge_tunnel/install_pkla true
    else
      service_user=root
      override_dir="@SYSTEMD_UNIT_DIR@/@SYSTEMD_UNIT_FILE_NAME@.d"
      mkdir -p "${override_dir}/"
      ( echo '[Service]'; echo "User=root" ) > "${override_dir}/10-run-as-root.conf"
      # todo ok to `systemctl daemon-reload` here?
    fi
  fi

  # remove socket files that were created by older ziti-edge-tunnel versions
  rm -f /tmp/ziti-edge-tunnel.sock /tmp/ziti-edge-tunnel-event.sock
fi

# Copied from https://github.com/Debian/debhelper/blob/master/autoscripts/postinst-systemd-dont-enable
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed @SYSTEMD_UNIT_FILE_NAME@; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask @SYSTEMD_UNIT_FILE_NAME@ >/dev/null || true

		if deb-systemd-helper --quiet was-enabled @SYSTEMD_UNIT_FILE_NAME@; then
			# Create new symlinks, if any.
			deb-systemd-helper enable @SYSTEMD_UNIT_FILE_NAME@ >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state @SYSTEMD_UNIT_FILE_NAME@ >/dev/null || true
fi
# End copied section

if [ "$1" = "configure" ]; then
    ssize=$(tput cols)
    printf '\n'
    printf %"$ssize"s | tr " " "-"
    echo "@SYSTEMD_SERVICE_NAME@ was installed..."
    if [ "${service_user}" = "root" ]; then
      echo "@SYSTEMD_SERVICE_NAME@ will run as root, since policykit cannot be configured to authorize set-llmnr on this system".
    fi
    echo "First install an OpenZiti identity or enroll token in: @ZITI_IDENTITY_DIR@"
    echo "then start or restart this systemd service unit."
    printf %"$ssize"s | tr " " "-"
    printf '\n'
fi
