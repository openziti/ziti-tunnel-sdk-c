name: CMake build
description: CMake Composite Action

inputs:
  preset:
    required: true
    description: vcpkg build preset, e.g, windows-arm64

  config:
    default: RelWithDebInfo
    description: build type

  target:
    default: bundle
    description: cmake build target

  test_id:
    description: Ziti Test Identity

runs:
  using: "composite"
  steps:
    - name: macOS tools
      if: runner.os == 'macOS'
      shell: bash
      run: brew install autoconf autoconf-archive automake pkg-config

    - name: simple build
      run: echo "preset = ${{ inputs.preset }} os = ${{ runner.os }}"
      shell: bash

    - name: install contemporary cmake
      if: runner.os != 'Ubuntu'
      uses: lukka/get-cmake@v3.27.7 # pin version to avoid failed glibc dependency on ubuntu 20 runners. go back to @latest when ubuntu 22+ is adopted for runner os.

    - uses: lukka/run-vcpkg@v11
      if: runner.os != 'Ubuntu'
      with:
        # get baseline from vcpkg
        vcpkgJsonGlob: './vcpkg.json'

    - uses: actions/cache@v4
      if: runner.os != 'Ubuntu'
      with:
        key: deps-${{ inputs.preset }}-${{ hashFiles('./vcpkg.json') }}
        path: './vcpkg/packages'

    - uses: lukka/run-cmake@v10.6 # pin version to avoid failed glibc dependency on ubuntu 20 runners. go back to @latest when ubuntu 22+ is adopted for runner os.
      if: runner.os != 'Ubuntu'
      name: Configure CMake
      with:
        configurePreset: ci-${{ inputs.preset }}
        configurePresetAdditionalArgs: "[ `-B`, `./build` ]"

    - name: build ziti-edge-tunnel (non-linux)
      if: runner.os != 'Ubuntu'
      shell: bash
      run: |
        cmake \
          --build ./build \
          --config ${{ inputs.config }} \
          --target ${{ inputs.target }} \
          --verbose

    - name: build ziti-edge-tunnel (linux)
      if: runner.os == 'Ubuntu'
      uses: ./.github/actions/openziti-tunnel-build-action
      with:
        arch: ${{ inputs.preset }}
        config: ${{ inputs.config }}
