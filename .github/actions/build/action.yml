name: CMake build
description: CMake Composite Action

inputs:
  preset:
    required: true
    description: vcpkg build preset, e.g, windows-arm64

  config:
    default: Release
    description: build type

  target:
    default: bundle
    description: cmake build target

  test_id:
    description: Ziti Test Identity

runs:
  using: "composite"
  steps:
    - name: simple build
      run: echo "preset = ${{ inputs.preset }}"
      shell: bash

    - name: install contemporary cmake
      uses: lukka/get-cmake@v3.27.7 # pin version to avoid failed glibc dependency on ubuntu 20 runners. go back to @latest when ubuntu 22+ is adopted for runner os.

    - name: setup msys
      uses: msys2/setup-msys2@v2
      if: contains(inputs.preset, 'mingw')
      with:
        update: true
        install: >-
          mingw-w64-x86_64-ninja

    - name: Put MSYS2_MinGW64 on PATH
      if: contains(inputs.preset, 'mingw')
      run: echo "D:/a/_temp/msys64/mingw64/bin" >> $GITHUB_PATH
      shell: bash


    - uses: lukka/run-vcpkg@v10
      with:
        # use 2023.12.12 vcpkg baseline,
        # see https://learn.microsoft.com/en-us/vcpkg/users/examples/versioning.getting-started#builtin-baseline
        vcpkgGitCommitId: 'c8696863d371ab7f46e213d8f5ca923c4aef2a00'

    - uses: lukka/run-cmake@v10.6 # pin version to avoid failed glibc dependency on ubuntu 20 runners. go back to @latest when ubuntu 22+ is adopted for runner os.
      name: Configure CMake
      with:
        configurePreset: ci-${{ inputs.preset }}
        configurePresetAdditionalArgs: "[ `-B`, `./build` ]"

    - name: build ziti-edge-tunnel
      shell: bash
      run: |
        cmake \
          --build ./build \
          --config ${{ inputs.config }} \
          --target ${{ inputs.target }} \
          --verbose
