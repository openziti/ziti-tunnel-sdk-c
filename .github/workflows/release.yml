name: Build release artifacts
on:
  release:
    types:
      - published
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macOS-10.15
          - windows-latest
        toolchain: [ default.cmake ]
        arch: [ x86_64 ]
        install: [ '' ]

        include:
          - os: ubuntu-18.04
            arch: arm
            toolchain: Linux-arm.cmake
            install: crossbuild-essential-armhf

          - os: ubuntu-18.04
            install: crossbuild-essential-arm64
            toolchain: Linux-arm64.cmake
            cmake_opts: -DCMAKE_BUILD_TYPE=Release
            arch: arm64

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: install tools
      if: matrix.install != ''
      run: |
        sudo apt update
        sudo apt install ${{matrix.install}}

    - name: make build dir
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: configure cmake
      if: ${{ runner.os != 'Windows' }}
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchains/${{matrix.toolchain}} -S ${{ github.workspace }} -B ${{runner.workspace}}/build
    - name: configure cmake WIN
      if: ${{ runner.os == 'Windows' }}
      run: cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/toolchains/${{matrix.toolchain}} -S ${{ github.workspace }} -B ${{runner.workspace}}/build
    - name: build
      run: cmake --build ${{runner.workspace}}/build --target bundle --verbose
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-${{matrix.arch}}
        path: ${{ runner.workspace }}/build/bundle/*.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - name: download
      uses: actions/download-artifact@v2
      with:
        path: ${{ runner.workspace }}/downloads/

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Linux-x86_64/ziti-edge-tunnel-Linux_x86_64.zip
        asset_name: ziti-edge-tunnel-Linux_x86_64.zip
        asset_content_type: application/octet-stream

    - name: upload Linux ARM
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Linux-arm/ziti-edge-tunnel-Linux_arm.zip
        asset_name: ziti-edge-tunnel-Linux_arm.zip
        asset_content_type: application/octet-stream

    - name: upload Linux ARM64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Linux-arm64/ziti-edge-tunnel-Linux_aarch64.zip
        asset_name: ziti-edge-tunnel-Linux_arm64.zip
        asset_content_type: application/octet-stream

    - name: upload MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/macOS-x86_64/ziti-edge-tunnel-Darwin_x86_64.zip
        asset_name: ziti-edge-tunnel-Darwin_x86_64.zip
        asset_content_type: application/octet-stream

    - name: upload Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ${{runner.workspace}}/downloads/Windows-x86_64/ziti-edge-tunnel-win64_AMD64.zip
        asset_name: ziti-edge-tunnel-Windows_x86_64.zip
        asset_content_type: application/octet-stream