name: Build release artifacts
on:
  release:
    types:
      - published
jobs:
  call-cmake-build:
    uses: ./.github/workflows/cmake.yml

  release:
    name: Download Release Artifacts
    runs-on: ubuntu-latest
    needs: [ call-cmake-build ]
    steps:
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: ${{ runner.workspace }}/downloads/

      - name: List Release Artifacts
        run: ls -horRAS ${{runner.workspace}}/downloads/

      - name: Release
        id: get_release
        uses: softprops/action-gh-release@v1
        with:
          # name: defaults to tag name
          # tag_name: defaults to github.ref
          # token: defaults to github.token
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            ${{ runner.workspace }}/downloads/Linux-x86_64/ziti-edge-tunnel-Linux_x86_64.zip
            ${{ runner.workspace }}/downloads/Linux-arm/ziti-edge-tunnel-Linux_arm.zip
            ${{ runner.workspace }}/downloads/macOS-x86_64/ziti-edge-tunnel-Darwin_x86_64.zip

      # These final two steps are only necessary because we prefer a different
      # release artifact name than is created by CMake, and so we could change
      # the CMake configuration or add an inline (shell) run step to manipulate
      # the filenames. The pre-release build doesn't rename the artifacts.
      - name: upload Linux ARM64 with different name
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ runner.workspace }}/downloads/Linux-arm64/ziti-edge-tunnel-Linux_aarch64.zip
          asset_name: ziti-edge-tunnel-Linux_arm64.zip
          asset_content_type: application/octet-stream

      - name: upload Windows with different name
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ runner.workspace }}/downloads/Windows-x86_64/ziti-edge-tunnel-Windows_AMD64.zip
          asset_name: ziti-edge-tunnel-Windows_x86_64.zip
          asset_content_type: application/octet-stream